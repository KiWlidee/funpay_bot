import requests
from bs4 import BeautifulSoup

from datetime import datetime

from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By

from time import sleep

from data import LOGIN, PASSWORD, TELEGRAM_TOKEN, TELEGRAM_CHAT_ID

browser = webdriver.Firefox()
browser.get("https://funpay.com/account/login")

# –í—Ö–æ–¥ –Ω–∞ funpay

elem = browser.find_element(By.NAME, "login")
elem.send_keys(LOGIN)
elem = browser.find_element(By.NAME, "password")
elem.send_keys(PASSWORD)
input()


def send_telegram(message):
    bot_token = TELEGRAM_TOKEN
    chat_id = TELEGRAM_CHAT_ID
    
    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    data = {
        "chat_id": chat_id,
        "text": message
    }
    
    requests.post(url, data=data)
    return "–û—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º"

def first_file_w():
    global content2
    soup = parcer_chats()
    browser.refresh()
    sleep(2.1)
    all_chats = soup.find("div", class_="contact-list custom-scroll")
    with open("C:\\vscodepj\\funpay_bot\\html_file1.txt", "w", encoding="utf-8") as f:
        f.write(str(all_chats.text))

    content2 = all_chats.text
    content2 = str(content2).split()

def chat_link_logs(word):
    print("–ó–∞–ø–∏—Å—ã–≤–∞—é –ª–æ–≥–∏")
    chat_find = all_chats.find("a").get("href")
    if word == "/people":
        with open("C:\\vscodepj\\funpay_bot\\logs.txt", "a", encoding="utf-8") as f:
            f.write(f"{datetime.now()} - –ü–æ–∑–≤–∞–ª–∏ —á–µ–ª–æ–≤–µ–∫–∞. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç - {chat_find}\n")  #  –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ª–æ–≥–∏
    elif word == "/new_message":
        with open("C:\\vscodepj\\funpay_bot\\logs.txt", "a", encoding="utf-8") as f:
            f.write(f"{datetime.now()} - –ü—Ä–∏—à–ª–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç - {chat_find}\n")  #  –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ª–æ–≥–∏
    elif word == "/rent":
        with open("C:\\vscodepj\\funpay_bot\\logs.txt", "a", encoding="utf-8") as f:
            f.write(f"{datetime.now()} - –ö—É–ø–∏–ª–∏ –∞—Ä–µ–Ω–¥—É. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç - {chat_find}\n")  #  –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ª–æ–≥–∏
    return chat_find


def parcer_chats():  #  –ü–∞—Ä—Å–∏–º html –∫–æ–¥ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —á–∞—Ç–æ–≤
    sleep(2.1)
    browser.get("https://funpay.com/chat/")
    full_html = browser.page_source
    soup = BeautifulSoup(full_html, "lxml")
    return soup

# –ó–∞—Ö–æ–¥–∏–º –≤ —á–∞—Ç—ã
browser.get("https://funpay.com/chat/")
soup = parcer_chats()
all_chats = soup.find("div", class_="contact-list custom-scroll")  #  –°–Ω–æ–≤–∞ –ø–∞—Ä—Å–∏–º –æ—Ç–¥–µ–ª—å–Ω–æ —á–∞—Ç—ã

with open("C:\\vscodepj\\funpay_bot\\html_file1.txt", "w", encoding="utf-8") as f:
    f.write(str(all_chats.text))
sleep(2.1)  #  –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ø–µ—Ä–≤—ã–π —Ñ–∞–π–ª –Ω–∞—à–∏ —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–∫—Ä–µ–ø–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
while True:
    sleep(2.1)
    soup = parcer_chats()
    sleep(2.1)
    all_chats = soup.find("div", class_="contact-list custom-scroll")
    with open("C:\\vscodepj\\funpay_bot\\html_file2.txt", "w", encoding="utf-8") as f:
        f.write(str(all_chats.text))
    with open("C:\\vscodepj\\funpay_bot\\html_file1.txt", 'r', encoding='utf-8') as f1, open("C:\\vscodepj\\funpay_bot\\html_file2.txt", 'r', encoding='utf-8') as f2:
        if f1.read() == f2.read():  #  –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ø–µ—Ä–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –∏ —Å —Å–∞–º–æ–≥–æ –Ω–æ–≤–æ–≥–æ. –°–º–æ—Ç—Ä–∏–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è.
            content2 = all_chats.text
            content2 = str(content2).split()
            continue
        else:
            soup = parcer_chats()
            browser.refresh()
            sleep(2.1)

            first_file_w()
            if content2[1] == "/people":
               
                chat_find = chat_link_logs("/people")
                send_telegram(f"–¢–µ–±—è –∑–æ–≤—É—Ç - {chat_find}")

                browser.get(chat_find)
                
                elem = browser.find_element(By.NAME, "content")
                elem.send_keys("–ü–æ–Ω—è–ª! –°–µ–π—á–∞—Å –æ—Ç–ø—Ä–∞–≤–ª—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–≤—Ü—É, –∏ –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å–ø–∏—Ç, —Ç–æ —Å—Ä–∞–∑—É –æ—Ç–≤–µ—Ç–∏—Ç. " \
                "–ë–æ–ª—å—à–µ –Ω–∏—á–µ–≥–æ –ø–∏—Å–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.")
                with open("C:\\vscodepj\\funpay_bot\\logs.txt", "a", encoding="utf-8") as f:
                    f.write(f"{datetime.now()} - –ü–æ–∑–≤–∞–ª–∏ —á–µ–ª–æ–≤–µ–∫–∞. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç - {chat_find}\n")  #  –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ª–æ–≥–∏
                elem.send_keys(Keys.RETURN)
                soup = parcer_chats()
                browser.refresh()
                #
                first_file_w()
                #
            elif content2[1] == "/rent":
                chat_find = chat_link_logs("/rent")
                send_telegram(f"–ê—Ä–µ–Ω–¥—É –∫—É–ø–∏–ª–∏ - {chat_find}")

                browser.get(chat_find)
                elem = browser.find_element(By.NAME, "content")
                elem.send_keys("üîî –£–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–≤—Ü—É, –∏ –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å–ø–∏—Ç, —Ç–æ —Å—Ä–∞–∑—É –æ—Ç–≤–µ—Ç–∏—Ç.")

                with open("C:\\vscodepj\\funpay_bot\\logs.txt", "a", encoding="utf-8") as f:
                    f.write(f"{datetime.now()} - –ö—É–ø–∏–ª–∏ –∞—Ä–µ–Ω–¥—É. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç - {chat_find}\n")

                elem.send_keys(Keys.RETURN)
                soup = parcer_chats()
                browser.refresh()
                #
                first_file_w()
            elif content2[1] == "/guarantee":
                chat_find = chat_link_logs("/guarantee")

                browser.get(chat_find)
                elem = browser.find_element(By.NAME, "content")
                elem.send_keys("""1. –ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –∞—Ä–µ–Ω–¥—É —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–Ω—è–µ—Ç—Å—è –Ω–∞ –í–ï–°–¨ —Å—Ä–æ–∫ –∞—Ä–µ–Ω–¥—ã.
2. –ì–∞—Ä–∞–Ω—Ç–∏–∏ —Å–∞–π—Ç–∞ - –µ—Å–ª–∏ —è –í–∞—Å –∫–æ–µ–º –æ–±—Ä–∞–∑–æ–º –æ–±–º–∞–Ω—É, —Ç–æ –º–æ–π –∞–∫–∫–∞—É–Ω—Ç —Å—Ä–∞–∑—É –∑–∞–±–ª–æ–∫–∏—Ä—É—é—Ç.
3. –ú–Ω–µ –ø—Ä–æ—Å—Ç–æ –Ω–µ –≤—ã–≥–æ–¥–Ω–æ –í–∞—Å –æ–±–º–∞–Ω—ã–≤–∞—Ç—å, –∏ –º–æ–∏ 400+ –æ—Ç–∑—ã–≤–æ–≤ –ø–æ–¥–∫—Ä–µ–ø–ª—è—é—Ç –º–æ–∏ —Å–ª–æ–≤–∞.""")
                elem.send_keys(Keys.RETURN)
                soup = parcer_chats()
                browser.refresh()
                #
                first_file_w()
            else:
                chat_find = chat_link_logs("/new_message")

                browser.get(chat_find)
                sleep(2.1)
                elem = browser.find_element(By.NAME, "content")
                elem.send_keys("""–ü—Ä–∏–≤–µ—Ç. –Ø - ü§ñ–±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π KiWlide –∏ —Ö–æ—á—É –ø–æ–º–æ—á—å —Ç–µ–±–µ, –º–æ–π –¥–æ—Ä–æ–≥–æ–π –ø–æ–∫—É–ø–∞—Ç–µ–ª—å‚ô•Ô∏è.
    ‚å®Ô∏è –í–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥–∞, –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
    üë® –ü–æ–∑–≤–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ - /people 
    üòã –í—ã –∫—É–ø–∏–ª–∏ —É –º–µ–Ω—è –∞—Ä–µ–Ω–¥—É –∞–∫–∫–∞—É–Ω—Ç–∞? - /rent
    üßê –í–æ–ø—Ä–æ—Å—ã –Ω–∞ —Å—á–µ—Ç –≥–∞—Ä–∞–Ω—Ç–∏–∏? - /guarantee
    ü§î –ï—Å–ª–∏ —É –í–∞—Å –Ω–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤, —Ç–æ –∏ –ø–∏—Å–∞—Ç—å –Ω–∏—á–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ. 
    ‚ÄºÔ∏è –ù–µ —Å—Ç–æ–∏—Ç –º–Ω–µ —Å–ø–∞–º–∏—Ç—å, –±—ã—Å—Ç—Ä–µ–µ —è –Ω–µ –æ—Ç–≤–µ—á—É, —Ç–æ–ª—å–∫–æ –Ω–∞–æ–±–æ—Ä–æ—Ç.""")

                elem.send_keys(Keys.RETURN)
                first_file_w()